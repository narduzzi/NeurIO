Search.setIndex({"docnames": ["advanced/CHANGELOG", "advanced/api_reference/api_reference", "advanced/api_reference/benchmarks/benchmark", "advanced/api_reference/benchmarks/benchmarking_suites", "advanced/api_reference/benchmarks/layer_based_benchmark", "advanced/api_reference/devices/base_device_class", "advanced/api_reference/devices/devices", "advanced/api_reference/devices/physical_devices", "advanced/api_reference/devices/virtual_devices", "advanced/api_reference/tasks/classification_tasks", "advanced/api_reference/tasks/regression_tasks", "advanced/api_reference/tasks/tasks", "advanced/benchmarking/benchmarking", "advanced/benchmarking/block_based_benchmarking", "advanced/benchmarking/model_based_benchmarking", "advanced/benchmarking/task_based_benchmarking", "advanced/benchmarking/tiny_ml_perf", "basics/generic_deployment", "basics/getting_started", "basics/installation", "basics/results_handling", "contribution/ADD_A_DEVICE", "contribution/CODE_OF_CONDUCT", "contribution/CONTRIBUTING", "contribution/WALL_OF_FAME", "contribution/template", "index", "supported_devices/canaan", "supported_devices/google", "supported_devices/stmicroelectronics", "supported_devices/synsense", "troubleshooting/FAQ"], "filenames": ["advanced/CHANGELOG.md", "advanced/api_reference/api_reference.rst", "advanced/api_reference/benchmarks/benchmark.rst", "advanced/api_reference/benchmarks/benchmarking_suites.rst", "advanced/api_reference/benchmarks/layer_based_benchmark.rst", "advanced/api_reference/devices/base_device_class.rst", "advanced/api_reference/devices/devices.rst", "advanced/api_reference/devices/physical_devices.rst", "advanced/api_reference/devices/virtual_devices.rst", "advanced/api_reference/tasks/classification_tasks.rst", "advanced/api_reference/tasks/regression_tasks.rst", "advanced/api_reference/tasks/tasks.rst", "advanced/benchmarking/benchmarking.rst", "advanced/benchmarking/block_based_benchmarking.rst", "advanced/benchmarking/model_based_benchmarking.rst", "advanced/benchmarking/task_based_benchmarking.rst", "advanced/benchmarking/tiny_ml_perf.rst", "basics/generic_deployment.md", "basics/getting_started.md", "basics/installation.md", "basics/results_handling.md", "contribution/ADD_A_DEVICE.md", "contribution/CODE_OF_CONDUCT.md", "contribution/CONTRIBUTING.md", "contribution/WALL_OF_FAME.md", "contribution/template.md", "index.rst", "supported_devices/canaan.md", "supported_devices/google.md", "supported_devices/stmicroelectronics.md", "supported_devices/synsense.md", "troubleshooting/FAQ.md"], "titles": ["Change log", "API Reference", "Benchmark", "Benchmarks", "Layer-Based Benchmark", "Base class", "Devices", "Physical Devices", "Virtual Devices", "Classification", "Regression", "Tasks", "Benchmarking Guide", "Block-based Benchmark", "Model-based benchmarks", "Task-based Benchmarking", "TinyML Perf Benchmark", "Generic Deployment", "Getting Started", "Installation", "Results handling", "Adding a physical device in NeurIO", "Code of Conduct", "Contributing", "Wall of Fame", "Template for device documentation", "Welcome to NeurIO", "Canaan Platforms", "ST Platforms", "ST Platforms", "SynSense Platforms", "FAQ"], "terms": {"all": [0, 4, 5, 13, 20, 21, 22, 23, 24, 26], "notabl": 0, "between": [0, 22, 26], "neurio": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 23, 25, 27, 28, 29, 30, 31], "releas": 0, "document": [0, 6, 23, 28], "thi": [0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 25, 26], "file": [0, 21, 27, 28], "setup": [0, 19, 29, 30], "project": [0, 22, 23], "first": [0, 17, 18, 22], "version": [0, 22, 27, 28, 29, 30], "code": [0, 17, 21, 23, 26, 28, 29], "support": [0, 6, 13, 15, 18, 20, 21], "k210virtual": [0, 8, 18], "k210": [0, 7, 8], "test": [0, 4, 9, 18, 26], "contain": [1, 3, 6, 9, 11, 13, 20, 21, 26], "librari": [1, 6, 17, 18, 19, 21, 25, 26, 28], "task": [1, 9, 12, 18, 21, 23, 26], "devic": [1, 2, 4, 5, 12, 13, 14, 15, 17, 18, 20, 23, 26, 27, 28, 29], "benchmark": [1, 18, 25, 26, 27, 28, 29, 30], "class": [2, 4, 6, 7, 8, 9, 15, 17, 20], "suit": [2, 4, 16], "sourc": [2, 4, 5, 7, 8, 9, 18, 22, 26], "base": [2, 3, 6, 9, 12], "abstract": [2, 5, 9, 21], "run_on": [2, 4, 13], "run": [2, 4, 5, 7, 13, 17, 18, 19, 20, 25, 26, 27, 28, 29, 30], "target": [2, 4], "paramet": [2, 4, 5, 7, 8], "return": [2, 4, 5, 7, 8, 9, 13, 15], "result": [2, 4, 5, 7, 13, 15, 17, 18, 26, 28], "json": [2, 4], "section": [3, 6, 12, 17, 18, 21, 25], "api": [3, 26], "refer": [3, 26], "layer": [3, 14, 18], "layerbasedbenchmark": [4, 13], "seed": 4, "0": [4, 15, 18, 27, 28, 29], "num_infer": 4, "16": 4, "infer": [4, 5, 7, 8, 15, 17, 18, 21, 30], "singl": [4, 14], "given": [4, 9], "The": [4, 6, 9, 13, 14, 16, 17, 19, 20, 21, 22, 25, 27, 28, 29, 30], "list": [4, 9, 14, 21], "i": [4, 5, 7, 8, 9, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "follow": [4, 13, 15, 18, 19, 20, 22, 23, 25, 27, 28, 29, 30], "block": [4, 14], "config": [4, 13], "1": [4, 13, 18, 22, 28, 29], "2": [4, 13, 18, 27, 29], "3": [4, 13, 15, 18, 19], "4": [4, 13, 15, 22], "convolut": [4, 13, 18], "1d": [4, 13], "filter": [4, 13], "32": [4, 8, 13, 18, 27], "stride": [4, 13], "64": [4, 13], "2d": [4, 13], "1x1": [4, 13], "3x3": [4, 13], "5x5": [4, 13], "7x7": [4, 13], "depthwis": [4, 13], "conv": [4, 13], "3d": [4, 13], "fulli": [4, 13], "connect": [4, 5, 6, 7, 8, 13, 25, 27, 29, 30], "128": [4, 13], "neuron": [4, 13], "256": [4, 13], "512": [4, 13], "1024": [4, 13], "avgpooling1d": [4, 13], "7": [4, 13, 29], "avgpooling2d": [4, 13], "2x2": [4, 13], "4x4": [4, 13], "maxpooling1d": [4, 13], "maxpooling2d": [4, 13, 18], "activ": [4, 13, 18], "relu": [4, 13, 18], "sigmoid": [4, 13], "relu6": [4, 13], "tanh": [4, 13], "batch": [4, 5, 7, 8, 13, 17], "norm": [4, 13], "4d": [4, 13], "reshap": [4, 13], "get_model": 4, "x": [4, 9, 15, 28, 29], "y": [4, 9, 15], "get": [4, 15, 22, 26], "model": [4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 21, 25, 26, 27, 28, 29, 30], "locat": [4, 8, 21], "line_idx": 4, "config_idx": 4, "info": 4, "none": [4, 5, 7, 8, 9, 15, 20, 27, 28, 29], "print": [4, 8, 15, 18, 19, 28], "structur": [4, 20, 21], "If": [4, 21, 22, 23, 31], "set": [4, 12, 14, 15, 22, 26, 29], "line": [4, 28], "from": [4, 13, 15, 18, 21, 22, 23, 27, 28, 29, 30], "column": 4, "provid": [4, 12, 13, 14, 17, 21, 22, 26], "each": [4, 13, 18, 21, 26], "compil": [4, 18, 27], "deploi": [4, 5, 7, 8, 18, 26], "For": [4, 15, 28, 29], "random": [4, 14, 18], "data": [4, 5, 7, 8, 9, 15, 17], "gener": [4, 14, 21, 26], "accord": [4, 21], "dimens": 4, "input": [4, 5, 7, 8, 9, 23], "us": [4, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "method": [4, 13, 15, 21], "inherit": [4, 15, 21], "port": [5, 7, 8, 27, 28, 29], "ani": [5, 7, 8, 18, 22, 25, 31], "name": [5, 7, 8, 9, 14, 15, 21, 25], "str": [5, 7, 8], "log_dir": [5, 7, 8, 18, 27, 28, 29], "kwarg": [5, 7, 8], "superclass": 5, "prepare_for_infer": [5, 7, 8, 15, 18, 27, 28, 29], "prepar": [5, 7, 8, 21], "function": [5, 7, 8], "should": [5, 7, 8, 9, 21, 23], "call": [5, 7, 8], "befor": [5, 7, 8, 22], "other": [5, 7, 8, 13, 22], "relev": [5, 7, 8], "input_x": [5, 7, 18, 27, 28, 29], "batch_siz": [5, 7, 8, 15, 18, 27, 28, 29], "int": [5, 7, 8], "measur": [5, 7, 13, 14], "associ": [5, 7], "perform": [5, 7, 11, 12, 13, 14, 15, 17, 18, 21, 26], "metric": [5, 7, 9, 15, 18, 20], "size": [5, 7, 8, 22], "tupl": [5, 7, 9], "inference_result": [5, 7], "np": [5, 7, 15, 18], "arrai": [5, 7, 9], "profil": [5, 7, 15, 18], "rais": [5, 7], "devicenotreadyexcept": [5, 7], "readi": [5, 7, 23, 26], "predict": [5, 7, 8, 9, 15, 18, 21, 27, 28, 29], "is_al": [5, 7, 8], "timeout": [5, 7, 8], "20": [5, 7, 8], "bool": [5, 7, 8], "check": [5, 7, 8, 18, 19, 23], "aliv": [5, 7, 8], "second": [5, 7, 8, 17], "true": [5, 7, 8, 9, 15], "fals": [5, 7, 8, 15], "otherwis": [5, 7, 8, 9], "organ": [6, 22], "constructor": [6, 21, 26], "ar": [6, 13, 14, 15, 17, 19, 22, 23, 26, 27, 28, 29, 30, 31], "separ": 6, "two": [6, 17], "famili": 6, "physic": [6, 22, 26], "virtual": [6, 18, 19], "workstat": [6, 17], "simul": 6, "emul": 6, "correspond": [6, 20], "kendryt": [7, 8, 18], "st": [7, 18, 21, 26], "stm32": 7, "serial": [7, 29], "device_identifi": 7, "stm32base": 7, "__connect_runn": 7, "stm32l4r9": [7, 29], "stm32l4r9i": 7, "disco": [7, 29], "nucleoh723zg": [7, 29], "nucleo": [7, 29], "h723zg": [7, 29], "tflite": [8, 27, 28, 29], "tflitevirtu": 8, "option": [8, 18], "dict": [8, 9], "is_quant": 8, "create_log_dir": 8, "save_data": 8, "detach": 8, "verbos": [8, 18, 23], "param": [8, 9], "return_stat": [8, 15], "statist": 8, "whether": [8, 22, 23], "progress": 8, "bar": 8, "mnistclassif": [9, 11, 15], "preprocess": [9, 15, 17], "evalu": [9, 15], "y_train": [9, 15, 18], "y_pred": [9, 15], "defin": [9, 20, 21], "label": 9, "could": [9, 22], "self": [9, 15], "y_test": [9, 15, 18], "y_valid": 9, "get_data": [9, 15], "validation_data": [9, 18], "train_data": 9, "test_data": 9, "get_metr": 9, "dictionari": [9, 15], "kei": [9, 15], "valu": [9, 15, 21], "get_metrics_info": [9, 15], "descript": [9, 14, 15, 21, 27, 28, 29, 30], "get_test_data": 9, "where": 9, "": [9, 17, 18, 21, 22, 23, 26], "output": 9, "get_train_data": 9, "train": [9, 14, 17, 18], "get_validation_data": 9, "valid": 9, "cifar10classif": [9, 11], "imagenetclassif": [9, 11], "nmnistclassif": [9, 11], "prepare_data": [9, 15], "shdclassif": [9, 11], "soon": [10, 14, 16, 23], "modul": [11, 15, 28, 29], "can": [11, 12, 13, 15, 17, 18, 19, 21, 22, 23, 25, 26, 28, 29], "assess": 11, "classif": [11, 15, 18], "regress": 11, "In": [12, 14, 18, 22], "we": [12, 14, 15, 18, 21, 22, 23], "ll": [12, 18], "explor": [12, 18], "how": [12, 21, 23], "curat": 12, "which": [12, 14, 17, 19, 20, 22, 27, 29], "compar": [12, 13, 26], "differ": [12, 13, 22, 26], "edg": [13, 15, 18, 26], "usual": [13, 15, 17], "veri": [13, 15], "constrain": [13, 15], "term": [13, 15], "resourc": [13, 15], "some": [13, 20, 22], "mai": [13, 20, 22], "execut": [13, 17], "faster": 13, "than": 13, "while": 13, "might": [13, 15, 25], "make": [13, 19, 22, 23], "difficult": 13, "To": [13, 15, 19, 21, 25, 27, 28, 29, 30], "solv": 13, "problem": 13, "framework": 13, "allow": [13, 21, 22, 26], "time": [13, 22], "take": [13, 22], "basic": [13, 18], "consist": 13, "popular": [13, 14], "neural": [13, 14, 18, 27], "network": [13, 14, 18, 27], "These": 13, "pool": 13, "normal": [13, 15], "pad": 13, "avail": [13, 14, 18, 19, 22, 26, 31], "configur": [13, 17], "zero": 13, "constant": 13, "reflect": 13, "symmetr": 13, "you": [13, 15, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], "need": [13, 15, 21, 22, 25, 27, 28, 29, 30], "creat": [13, 15, 22, 25], "object": [13, 15], "import": [13, 15, 18, 19, 21, 27, 28, 29], "onc": [13, 19, 21], "benchmarkresult": 13, "compos": [13, 14], "multipl": [13, 14], "thei": [13, 15, 22], "build": [13, 14], "topologi": 13, "skip": 13, "concaten": 13, "add": [13, 26], "resnet": [13, 18], "densenet": 13, "incept": 13, "mobilenet": 13, "classifi": [13, 18], "convblock": 13, "iid": 13, "conv1d": 13, "conv2d": [13, 18], "naiv": 13, "With": 13, "reduct": 13, "avg2d": 13, "flatten": [13, 18], "dense10": 13, "glavg": 13, "cellbasedbenchmark": 13, "reli": 14, "architectur": 14, "weight": 14, "either": 14, "dataset": [14, 15, 18], "randomli": 14, "design": [14, 16, 21, 26], "simpl": [14, 18, 21], "easili": [14, 26], "extens": [14, 26], "see": [14, 21, 22, 23], "more": [14, 18, 22, 23], "detail": [14, 18, 21], "cell": 14, "tiny_ml_perf": 14, "pretrain": 14, "tinymlperf": 14, "It": [14, 16, 17, 19, 20, 26], "cnn": 14, "yet": [14, 19, 21], "tinyml": 14, "perf": 14, "therefor": [15, 17], "have": [15, 18, 21, 22, 26, 31], "few": [15, 27, 28, 29, 30], "mean": 15, "onli": [15, 22, 31], "limit": [15, 17], "optim": [15, 17, 18, 26], "specif": [15, 17, 21, 26], "exampl": [15, 18, 21, 22, 23, 28, 29], "imag": [15, 18], "sound": 15, "recognit": 15, "current": [15, 28], "domain": 15, "categori": 15, "main": [15, 17, 25], "mnist": [15, 18], "accuraci": [15, 18], "digit": [15, 18], "10": [15, 18, 29], "cifar10": [15, 18], "cifar": 15, "cifar100": 15, "100": [15, 18], "imagenet": 15, "1000": 15, "n": [15, 18], "event": [15, 22], "shd": 15, "audio": 15, "spike": 15, "heidelberg": 15, "choos": [15, 18, 26], "x_train": [15, 18], "x_test": [15, 18], "an": [15, 17, 18, 22, 29, 31], "12": 15, "must": [15, 21], "implement": [15, 21], "user": [15, 17, 23, 26, 29], "bin": [15, 29], "env": 15, "python": [15, 19, 21, 26, 27, 28], "numpi": [15, 18], "tensorflow": [15, 18, 28], "tf": [15, 18], "def": 15, "__init__": 15, "super": 15, "ce": 15, "kera": [15, 18], "categoricalcrossentropi": [15, 18], "categoricalaccuraci": 15, "load_data": [15, 18], "repeat": 15, "expand_dim": 15, "axi": [15, 18], "util": [15, 18, 29], "to_categor": [15, 18], "255": 15, "astyp": 15, "float32": 15, "re": 15, "k": 15, "reset_st": 15, "update_st": 15, "sample_weight": 15, "categor": 15, "cross": 15, "entropi": 15, "over": [15, 22], "microcontrol": 16, "microprocessor": 16, "ad": [16, 26], "describ": [17, 25], "process": [17, 18, 21, 23], "deep": 17, "learn": [17, 18, 21, 26], "divid": 17, "part": [17, 23], "step": [17, 18, 23], "requir": [17, 21, 22, 28], "four": 17, "collect": 17, "per": 17, "basi": 17, "quantiz": [17, 26], "third": [17, 22], "also": [17, 19, 22, 26], "depend": 17, "tool": [17, 21, 25, 26, 27, 28, 29, 30], "sdk": 17, "manufactur": [17, 21, 25], "fourth": 17, "transfer": 17, "commun": [17, 22, 23], "protocol": 17, "three": 17, "report": 17, "occur": [17, 22], "come": [17, 23], "addit": 17, "cost": 17, "hardwar": [17, 21, 26], "howev": [17, 22], "highli": 17, "insid": [17, 21], "memori": [17, 20, 25], "load": [17, 18], "previous": 17, "upload": 17, "storag": 17, "dure": 17, "metadata": 17, "energi": [17, 20], "cycl": 17, "etc": 17, "store": 17, "both": 17, "final": 17, "aggreg": 17, "kpi": 17, "comput": [17, 25, 27, 30], "back": 17, "displai": [17, 18], "databas": 17, "welcom": [18, 22, 23, 25], "open": [18, 19, 22, 26, 31], "machin": [18, 21, 23, 26], "embed": 18, "guid": [18, 21, 23, 26], "through": 18, "your": [18, 22, 23, 26], "let": [18, 26], "quick": 18, "handwritten": 18, "microleectron": 18, "platform": [18, 21], "dens": 18, "sequenti": 18, "o": 18, "sklearn": 18, "balanced_accuracy_scor": 18, "canaan": [18, 26, 28, 29, 30], "set_se": 18, "input_shap": 18, "shape": 18, "inputlay": 18, "adam": 18, "loss": 18, "fit": 18, "epoch": 18, "5": [18, 29], "summari": 18, "save": 18, "h5": 18, "number": 18, "sampl": 18, "origin": [18, 23], "y_pred_model": 18, "argmax": 18, "tmp": 18, "k210_virtual": 18, "y_pred_devic": 18, "y_true": 18, "score_origin": 18, "score_devic": 18, "score": 18, "2f": 18, "format": 18, "inform": [18, 20, 22, 25], "demonstr": 18, "workflow": 18, "initi": 18, "case": [18, 20], "50": 18, "select": 18, "specifi": [18, 21], "just": 18, "introduct": [18, 21], "delv": 18, "deeper": 18, "advanc": [18, 22], "featur": 18, "custom": [18, 21], "now": 18, "ve": 18, "successfulli": 18, "dive": 18, "about": [18, 20, 22, 25], "subsequ": 18, "next": 18, "out": 18, "compat": [18, 27, 29], "understand": 18, "discov": 18, "find": 18, "pre": 18, "sever": [18, 19, 20], "deploy": [18, 21, 26], "congratul": 18, "taken": [18, 26], "feel": [18, 23, 31], "free": [18, 22, 23, 31], "reach": 18, "question": [18, 31], "encount": 18, "issu": [18, 22, 31], "along": 18, "wai": 18, "6": [19, 27, 29], "higher": 19, "recommend": 19, "environ": [19, 22, 29], "preview": 19, "clone": [19, 21, 23], "repositori": [19, 21, 23, 29], "script": [19, 21, 28], "git": [19, 21, 23], "http": [19, 21, 22, 23], "github": [19, 21, 22, 23, 26, 31], "com": [19, 21, 23], "csem": [19, 21, 22], "cd": [19, 21, 23], "py": [19, 21, 28], "ha": [19, 21, 22], "automat": [19, 26], "when": [19, 22, 23], "them": [19, 22], "manual": 19, "command": [19, 23, 25, 27, 30], "r": 19, "txt": 19, "access": 19, "__version__": 19, "attribut": [19, 21], "packag": [19, 23, 28], "sphinx": 19, "built": 19, "doc": [19, 21], "html": 19, "place": 19, "index": [19, 26], "web": [19, 22], "browser": 19, "start": [19, 26], "todo": [20, 25, 30], "latenc": 20, "usag": 20, "consumpt": 20, "field": 20, "power": [21, 26], "simplifi": [21, 26], "onto": [21, 26], "leverag": 21, "its": [21, 22, 25], "capabl": 21, "effici": 21, "here": [21, 27, 29], "replac": [21, 28], "device_nam": 21, "checkout": [21, 23], "b": [21, 23, 30], "develop": [21, 23, 26, 29], "feat": 21, "navig": 21, "directori": [21, 23], "l": 21, "don": 21, "t": [21, 23], "mkdir": 21, "newli": 21, "device_famili": 21, "ensur": 21, "snippet": 21, "my_devic": 21, "mydevic": 21, "after": [21, 22], "properli": 21, "written": [21, 22], "markdown": 21, "follown": 21, "A": [21, 30], "short": 21, "includ": [21, 22, 23, 25, 27, 28, 29, 30], "instal": [21, 23, 26], "explain": 21, "piplein": 21, "link": [21, 27, 29], "extern": [21, 25], "pipelin": 21, "figur": 21, "system": 21, "help": [21, 22], "templat": 21, "work": 21, "whenev": [21, 22], "one": [21, 22], "doe": 21, "exist": [21, 23], "folder": [21, 27], "chip": 21, "e": [21, 22, 23], "g": [21, 22], "stm": 21, "microelectron": 21, "test_": 21, "functionaltest": 21, "complet": 21, "previou": 21, "merg": [21, 23], "interest": [22, 31], "foster": 22, "contributor": [22, 23], "maintain": 22, "pledg": 22, "particip": 22, "harass": 22, "experi": 22, "everyon": 22, "regardless": 22, "ag": 22, "bodi": 22, "disabl": 22, "ethnic": 22, "gender": 22, "ident": 22, "express": 22, "level": 22, "nation": 22, "person": 22, "appear": 22, "race": 22, "religion": 22, "sexual": 22, "orient": 22, "behavior": 22, "contribut": 22, "posit": 22, "inclus": 22, "languag": 22, "Being": 22, "respect": 22, "viewpoint": 22, "gracefulli": 22, "accept": 22, "construct": 22, "critic": 22, "focus": 22, "what": [22, 25], "best": 22, "show": 22, "empathi": 22, "toward": 22, "member": 22, "unaccept": 22, "imageri": 22, "unwelcom": 22, "attent": 22, "troll": 22, "insult": 22, "derogatori": 22, "comment": 22, "polit": 22, "attack": 22, "public": [22, 23], "privat": 22, "publish": 22, "electron": 22, "address": 22, "without": [22, 26], "explicit": 22, "permiss": 22, "reason": 22, "consid": 22, "inappropri": 22, "forum": 22, "space": 22, "meant": 22, "profession": 22, "interact": 22, "clarifi": 22, "expect": 22, "appropri": 22, "fair": [22, 26], "correct": 22, "action": 22, "instanc": 22, "right": 22, "remov": 22, "edit": 22, "reject": 22, "commit": [22, 23], "wiki": 22, "align": 22, "ban": 22, "temporarili": 22, "perman": 22, "deem": 22, "threaten": 22, "offens": 22, "harm": 22, "appli": 22, "content": [22, 29], "org": 22, "offici": [22, 28], "presenc": 22, "well": [22, 25], "offlin": 22, "onlin": 22, "within": 22, "individu": 22, "repres": 22, "mail": 22, "post": [22, 30], "via": 22, "social": 22, "media": 22, "account": 22, "act": 22, "appoint": 22, "de": 22, "facto": 22, "mani": 22, "form": 22, "someon": 22, "bad": 22, "dai": 22, "harsh": 22, "hurt": 22, "queue": 22, "seriou": 22, "sexist": 22, "racist": 22, "statement": 22, "threat": 22, "violenc": 22, "everyth": 22, "immedi": 22, "escal": 22, "pleas": [22, 23, 31], "below": 22, "vast": 22, "major": 22, "aim": [22, 26], "empow": 22, "resolv": 22, "themselv": 22, "ask": 22, "fail": 22, "further": 22, "approach": 22, "give": 22, "peopl": 22, "control": 22, "outcom": 22, "disput": 22, "experienc": 22, "wit": 22, "strategi": [22, 26], "perceiv": 22, "directli": 22, "those": 22, "involv": 22, "prefer": 22, "real": 22, "medium": 22, "parti": 22, "mutual": 22, "friend": 22, "background": 22, "interced": 22, "still": 22, "unabl": 22, "believ": 22, "rise": 22, "anoth": 22, "steward": 22, "simon": [22, 24], "narduzzi": [22, 24], "ch": 22, "determin": 22, "wa": 22, "sanction": 22, "possibli": 22, "warn": 22, "expuls": 22, "sponsor": 22, "good": 22, "faith": 22, "effort": 22, "polici": 22, "submit": [22, 23], "even": [22, 23], "unrel": 22, "complaint": 22, "year": 22, "receiv": 22, "alleg": 22, "notifi": 22, "accus": 22, "opportun": 22, "discuss": 22, "do": [22, 28], "utmost": 22, "keep": 22, "anonym": 22, "ongo": 22, "engag": 22, "anyon": 22, "safeti": 22, "notic": 22, "adapt": 22, "coven": 22, "aspect": 22, "geek": 22, "femin": 22, "drupal": 22, "better": 23, "improv": 23, "bug": 23, "fix": 23, "updat": 23, "new": [23, 25, 26], "suggest": 23, "valuabl": 23, "u": [23, 31], "fork": 23, "pull": 23, "request": 23, "would": 23, "like": 23, "deepli": 23, "sure": 23, "our": 23, "conduct": [23, 26], "repositiori": 23, "download": [23, 25, 27, 29], "your_profil": 23, "mode": 23, "pip": 23, "modif": 23, "branch": 23, "my": 23, "m": 23, "messag": 23, "Then": 23, "push": 23, "aren": 23, "alreadi": 23, "cover": 23, "unit": 23, "go": 23, "As": [23, 28], "review": 23, "pass": 23, "local": 23, "pytest": 23, "huge": 24, "thank": 24, "nicola": 24, "cantal": 24, "r\u00e9my": 24, "vuagnaux": 24, "dorvan": 24, "favr": 24, "romain": 24, "gaulier": 24, "qianqian": 24, "feng": 24, "technologi": 25, "bu": 25, "speed": 25, "tool1": [25, 30], "tool2": [25, 30], "step1": [25, 30], "step2": [25, 30], "board": [25, 27, 29, 30], "modular": 26, "unifi": 26, "interfac": 26, "wide": 26, "rang": 26, "direct": [26, 30], "leav": 26, "underli": 26, "algorithm": 26, "care": 26, "focu": 26, "easi": 26, "comparison": 26, "applic": [26, 29], "chang": 26, "log": 26, "wall": 26, "fame": 26, "faq": 26, "processor": [27, 28, 29, 30], "statu": [27, 28, 29, 30], "firmwar": [27, 28, 29, 30], "sipe": 27, "maix": 27, "m1": 27, "bit": 27, "risc": 27, "v": 27, "cpu": 27, "kpu": 27, "maixpi": 27, "ncc": 27, "nncase": 27, "transform": 27, "interpret": [27, 28], "instruct": 27, "extract": 27, "zip": 27, "copi": 27, "convert": [27, 29], "flash": [27, 29], "input_data": [27, 28, 29], "dev": [27, 29], "tty": 27, "someport": 27, "usb": 28, "runtim": 28, "pycor": 28, "v2": 28, "conflict": 28, "modifi": 28, "so": 28, "your_venv": 28, "lib": 28, "python3": 28, "site": 28, "tflite_runtim": 28, "lite": 28, "interpreter_wrapp": 28, "_pywrap_tensorflow_interpreter_wrapp": 28, "_interpreter_wrapp": 28, "try": 28, "except": 28, "bypass": 28, "edgetpu": 28, "144": 29, "arm": 29, "cortex": 29, "cube": 29, "ai": 29, "stmcubeid": 29, "stmprogrammercli": 29, "stml4r9i": 29, "discoveri": 29, "s9": 29, "id": 29, "variabl": 29, "path": 29, "maco": 29, "sonoma": 29, "export": 29, "stm32cubeprogramer_cli_path": 29, "stmicroelectron": 29, "stm32cube": 29, "stm32cubeprogramm": 29, "app": 29, "stm32_programmer_cli": 29, "x_cube_ai_path": 29, "alex": 29, "pack": 29, "stm32cubeide_path": 29, "stm32cubeid": 29, "flowchart": 30, "tb": 30, "c": 30, "subgraph": 30, "end": 30, "contact": 31, "email": 31, "At": 31, "moment": 31, "demand": 31, "send": 31}, "objects": {"neurio.benchmarking.suites": [[2, 0, 1, "", "Benchmark"], [4, 0, 1, "", "LayerBasedBenchmark"]], "neurio.benchmarking.suites.Benchmark": [[2, 1, 1, "", "run_on"]], "neurio.benchmarking.suites.LayerBasedBenchmark": [[4, 1, 1, "", "get_model"], [4, 1, 1, "", "info"], [4, 1, 1, "", "run_on"]], "neurio.devices.device": [[5, 0, 1, "", "Device"]], "neurio.devices.device.Device": [[5, 1, 1, "", "infer"], [5, 1, 1, "", "is_alive"], [5, 1, 1, "", "predict"], [5, 1, 1, "", "prepare_for_inference"]], "neurio.devices.physical.canaan.kendryte": [[7, 0, 1, "", "K210"]], "neurio.devices.physical.canaan.kendryte.K210": [[7, 1, 1, "", "infer"], [7, 1, 1, "", "is_alive"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "prepare_for_inference"]], "neurio.devices.physical.st.stm32": [[7, 0, 1, "", "NUCLEOH723ZG"], [7, 0, 1, "", "STM32"], [7, 0, 1, "", "STM32L4R9"]], "neurio.devices.physical.st.stm32.NUCLEOH723ZG": [[7, 1, 1, "", "infer"], [7, 1, 1, "", "is_alive"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "prepare_for_inference"]], "neurio.devices.physical.st.stm32.STM32": [[7, 1, 1, "", "__connect_runner"], [7, 1, 1, "", "infer"], [7, 1, 1, "", "is_alive"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "prepare_for_inference"]], "neurio.devices.physical.st.stm32.STM32L4R9": [[7, 1, 1, "", "infer"], [7, 1, 1, "", "is_alive"], [7, 1, 1, "", "predict"], [7, 1, 1, "", "prepare_for_inference"]], "neurio.devices.virtual.canaan.kendryte": [[8, 0, 1, "", "K210Virtual"]], "neurio.devices.virtual.canaan.kendryte.K210Virtual": [[8, 1, 1, "", "is_alive"]], "neurio.devices.virtual.tensorflow.tflite": [[8, 0, 1, "", "TFLiteVirtual"]], "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual": [[8, 1, 1, "", "create_log_dirs"], [8, 1, 1, "", "detach"], [8, 1, 1, "", "is_alive"], [8, 1, 1, "", "predict"], [8, 1, 1, "", "prepare_for_inference"], [8, 1, 1, "", "save_data"]], "neurio.tasks": [[9, 2, 0, "-", "classification"]], "neurio.tasks.classification": [[9, 0, 1, "", "CIFAR10Classification"], [9, 0, 1, "", "ImageNetClassification"], [9, 0, 1, "", "MNISTClassification"], [9, 0, 1, "", "NMNISTClassification"], [9, 0, 1, "", "SHDClassification"]], "neurio.tasks.classification.CIFAR10Classification": [[9, 1, 1, "", "evaluate"], [9, 1, 1, "", "get_data"], [9, 1, 1, "", "get_metrics"], [9, 1, 1, "", "get_metrics_info"], [9, 1, 1, "", "get_test_data"], [9, 1, 1, "", "get_train_data"], [9, 1, 1, "", "get_validation_data"], [9, 1, 1, "", "preprocess"]], "neurio.tasks.classification.ImageNetClassification": [[9, 1, 1, "", "evaluate"], [9, 1, 1, "", "get_data"], [9, 1, 1, "", "get_metrics"], [9, 1, 1, "", "get_metrics_info"], [9, 1, 1, "", "get_test_data"], [9, 1, 1, "", "get_train_data"], [9, 1, 1, "", "get_validation_data"], [9, 1, 1, "", "preprocess"]], "neurio.tasks.classification.MNISTClassification": [[9, 1, 1, "", "evaluate"], [9, 1, 1, "", "get_data"], [9, 1, 1, "", "get_metrics"], [9, 1, 1, "", "get_metrics_info"], [9, 1, 1, "", "get_test_data"], [9, 1, 1, "", "get_train_data"], [9, 1, 1, "", "get_validation_data"], [9, 1, 1, "", "preprocess"]], "neurio.tasks.classification.NMNISTClassification": [[9, 1, 1, "", "evaluate"], [9, 1, 1, "", "get_data"], [9, 1, 1, "", "get_metrics"], [9, 1, 1, "", "get_metrics_info"], [9, 1, 1, "", "get_test_data"], [9, 1, 1, "", "get_train_data"], [9, 1, 1, "", "get_validation_data"], [9, 1, 1, "", "prepare_data"]], "neurio.tasks.classification.SHDClassification": [[9, 1, 1, "", "evaluate"], [9, 1, 1, "", "get_data"], [9, 1, 1, "", "get_metrics"], [9, 1, 1, "", "get_metrics_info"], [9, 1, 1, "", "get_test_data"], [9, 1, 1, "", "get_train_data"], [9, 1, 1, "", "get_validation_data"], [9, 1, 1, "", "prepare_data"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"]}, "titleterms": {"chang": 0, "log": 0, "v0": 0, "0": 0, "1": [0, 21], "2023": 0, "10": 0, "12": 0, "ad": [0, 21, 23], "fix": 0, "deprec": 0, "remov": 0, "secur": 0, "api": 1, "refer": 1, "python": 1, "benchmark": [2, 3, 4, 12, 13, 14, 15, 16], "layer": [4, 13], "base": [4, 5, 13, 14, 15, 19], "class": [5, 21], "devic": [6, 7, 8, 21, 25], "physic": [7, 21], "canaan": [7, 8, 27], "stmicrolectron": 7, "virtual": 8, "tensorflow": 8, "classif": 9, "regress": 10, "task": [11, 15], "avail": [11, 15], "guid": 12, "block": 13, "usag": [13, 25, 27, 28, 29, 30], "cell": 13, "model": 14, "load": 15, "neurio": [15, 19, 21, 26], "defin": 15, "new": [15, 21], "tinyml": 16, "perf": 16, "gener": 17, "deploy": 17, "system": [17, 25], "prepar": [17, 25], "predict": 17, "get": [18, 23], "start": [18, 23], "quickstart": 18, "instal": [19, 25, 27, 28, 29, 30], "requir": 19, "us": 19, "pip": 19, "from": 19, "sourc": 19, "depend": 19, "version": 19, "build": 19, "document": [19, 21, 25], "result": 20, "handl": 20, "profil": 20, "step": [21, 25, 27, 28, 29, 30], "download": 21, "creat": 21, "branch": 21, "2": 21, "3": 21, "4": 21, "function": 21, "test": [21, 23], "your": 21, "5": 21, "submit": 21, "pull": 21, "request": 21, "code": [22, 31], "conduct": 22, "our": 22, "standard": 22, "respons": 22, "scope": 22, "conflict": 22, "resolut": 22, "report": 22, "violat": 22, "enforc": 22, "attribut": 22, "contribut": [23, 26], "featur": 23, "run": 23, "wall": 24, "fame": 24, "activ": 24, "contributor": 24, "pass": 24, "templat": 25, "introduct": 25, "characterist": 25, "prerequisit": [25, 27, 28, 29, 30], "execut": [25, 27, 28, 29, 30], "process": [25, 27, 28, 29, 30], "infer": 25, "welcom": 26, "The": 26, "basic": 26, "support": [26, 27, 28, 29, 30], "platform": [26, 27, 28, 29, 30], "advanc": 26, "troubleshoot": 26, "list": [27, 28, 29, 30], "kendryt": 27, "k210": 27, "st": [28, 29], "googl": 28, "coral": 28, "edg": 28, "tpu": 28, "stm32": 29, "m4": 29, "m7": 29, "famili": 29, "synsens": 30, "dynapcnn": 30, "faq": 31, "problem": 31, "access": 31}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Change log": [[0, "change-log"]], "v0.0.1 - 2023-10-12": [[0, "v0-0-1-2023-10-12"]], "Added": [[0, "added"]], "Changed": [[0, "changed"]], "Fixed": [[0, "fixed"]], "Deprecated": [[0, "deprecated"]], "Removed": [[0, "removed"]], "Security": [[0, "security"]], "API Reference": [[1, "api-reference"]], "Python reference": [[1, null]], "Benchmark": [[2, "benchmark"]], "Benchmarks": [[3, "benchmarks"]], "Layer-Based Benchmark": [[4, "layer-based-benchmark"]], "Base class": [[5, "base-class"]], "Devices": [[6, "devices"]], "Physical Devices": [[7, "physical-devices"]], "Canaan": [[7, "canaan"], [8, "canaan"]], "STMicrolectronics": [[7, "stmicrolectronics"]], "Virtual Devices": [[8, "virtual-devices"]], "Tensorflow": [[8, "tensorflow"]], "Classification": [[9, "module-neurio.tasks.classification"]], "Regression": [[10, "regression"]], "Tasks": [[11, "tasks"]], "Available tasks": [[11, "available-tasks"]], "Benchmarking Guide": [[12, "benchmarking-guide"]], "Block-based Benchmark": [[13, "block-based-benchmark"]], "Layer-based benchmarking": [[13, "layer-based-benchmarking"]], "Usage": [[13, "usage"], [13, "id3"], [25, "usage"], [27, "usage"], [28, "usage"], [29, "usage"], [30, "usage"]], "Cell-based benchmarking": [[13, "cell-based-benchmarking"]], "Model-based benchmarks": [[14, "model-based-benchmarks"]], "Task-based Benchmarking": [[15, "task-based-benchmarking"]], "Available Tasks": [[15, "available-tasks"]], "Loading a task in NeurIO": [[15, "loading-a-task-in-neurio"]], "Defining a new task": [[15, "defining-a-new-task"]], "TinyML Perf Benchmark": [[16, "tinyml-perf-benchmark"]], "Generic Deployment": [[17, "generic-deployment"]], "System Preparation": [[17, "system-preparation"]], "Prediction": [[17, "prediction"]], "Getting Started": [[18, "getting-started"]], "Quickstart": [[18, "quickstart"]], "Installation": [[19, "installation"], [25, "installation"], [27, "installation"], [28, "installation"], [29, "installation"], [30, "installation"]], "Base requirements": [[19, "base-requirements"]], "Installation using pip": [[19, "installation-using-pip"]], "Installation from source": [[19, "installation-from-source"]], "Dependencies": [[19, "dependencies"]], "NeurIO version": [[19, "neurio-version"]], "Building the documentation": [[19, "building-the-documentation"]], "Results handling": [[20, "results-handling"]], "Results": [[20, "results"]], "Profiler": [[20, "profiler"]], "Adding a physical device in NeurIO": [[21, "adding-a-physical-device-in-neurio"]], "Step 1: Download NeurIO and create a new branch": [[21, "step-1-download-neurio-and-create-a-new-branch"]], "Step 2:  Create a new Device Class": [[21, "step-2-create-a-new-device-class"]], "Step 3: Create the documentation for the device": [[21, "step-3-create-the-documentation-for-the-device"]], "Step 4: Create a functional test for your device": [[21, "step-4-create-a-functional-test-for-your-device"]], "Step 5: Submit a pull request": [[21, "step-5-submit-a-pull-request"]], "Code of Conduct": [[22, "code-of-conduct"]], "Our Standards": [[22, "our-standards"]], "Our Responsibilities": [[22, "our-responsibilities"]], "Scope": [[22, "scope"]], "Conflict Resolution": [[22, "conflict-resolution"]], "Reporting Violations": [[22, "reporting-violations"]], "Enforcement": [[22, "enforcement"]], "Attribution": [[22, "attribution"]], "Contributing": [[23, "contributing"]], "Getting started": [[23, "getting-started"]], "Adding a feature": [[23, "adding-a-feature"]], "Running tests": [[23, "running-tests"]], "Wall of Fame": [[24, "wall-of-fame"]], "Active contributors": [[24, "active-contributors"]], "Passed contributors": [[24, "passed-contributors"]], "Template for device documentation": [[25, "template-for-device-documentation"]], "Introduction": [[25, "introduction"]], "Device Characteristics": [[25, "device-characteristics"]], "Prerequisites": [[25, "prerequisites"], [27, "prerequisites"], [28, "prerequisites"], [29, "prerequisites"], [30, "prerequisites"]], "Installation steps": [[25, "installation-steps"], [27, "installation-steps"], [28, "installation-steps"], [29, "installation-steps"], [30, "installation-steps"]], "Execution process": [[25, "execution-process"], [27, "execution-process"], [28, "execution-process"], [29, "execution-process"], [30, "execution-process"]], "System preparation": [[25, "system-preparation"]], "Inference": [[25, "inference"]], "Welcome to NeurIO": [[26, "welcome-to-neurio"]], "The Basics": [[26, null]], "Supported Platforms": [[26, null]], "Advanced": [[26, null]], "Contribution": [[26, null]], "Troubleshooting": [[26, null]], "Canaan Platforms": [[27, "canaan-platforms"]], "List of supported platforms": [[27, "list-of-supported-platforms"], [28, "list-of-supported-platforms"], [29, "list-of-supported-platforms"], [30, "list-of-supported-platforms"]], "Kendryte K210": [[27, "kendryte-k210"]], "ST Platforms": [[28, "st-platforms"], [29, "st-platforms"]], "Google Coral Edge TPU": [[28, "google-coral-edge-tpu"]], "STM32 M4 and M7 Family": [[29, "stm32-m4-and-m7-family"]], "SynSense Platforms": [[30, "synsense-platforms"]], "DynapCNN": [[30, "dynapcnn"]], "FAQ": [[31, "faq"]], "Problems with the code": [[31, "problems-with-the-code"]], "Access": [[31, "access"]]}, "indexentries": {"benchmark (class in neurio.benchmarking.suites)": [[2, "neurio.benchmarking.suites.Benchmark"]], "run_on() (neurio.benchmarking.suites.benchmark method)": [[2, "neurio.benchmarking.suites.Benchmark.run_on"]], "layerbasedbenchmark (class in neurio.benchmarking.suites)": [[4, "neurio.benchmarking.suites.LayerBasedBenchmark"]], "get_model() (neurio.benchmarking.suites.layerbasedbenchmark method)": [[4, "neurio.benchmarking.suites.LayerBasedBenchmark.get_model"]], "info() (neurio.benchmarking.suites.layerbasedbenchmark method)": [[4, "neurio.benchmarking.suites.LayerBasedBenchmark.info"]], "run_on() (neurio.benchmarking.suites.layerbasedbenchmark method)": [[4, "neurio.benchmarking.suites.LayerBasedBenchmark.run_on"]], "device (class in neurio.devices.device)": [[5, "neurio.devices.device.Device"]], "infer() (neurio.devices.device.device method)": [[5, "neurio.devices.device.Device.infer"]], "is_alive() (neurio.devices.device.device method)": [[5, "neurio.devices.device.Device.is_alive"]], "predict() (neurio.devices.device.device method)": [[5, "neurio.devices.device.Device.predict"]], "prepare_for_inference() (neurio.devices.device.device method)": [[5, "neurio.devices.device.Device.prepare_for_inference"]], "k210 (class in neurio.devices.physical.canaan.kendryte)": [[7, "neurio.devices.physical.canaan.kendryte.K210"]], "nucleoh723zg (class in neurio.devices.physical.st.stm32)": [[7, "neurio.devices.physical.st.stm32.NUCLEOH723ZG"]], "stm32 (class in neurio.devices.physical.st.stm32)": [[7, "neurio.devices.physical.st.stm32.STM32"]], "stm32l4r9 (class in neurio.devices.physical.st.stm32)": [[7, "neurio.devices.physical.st.stm32.STM32L4R9"]], "__connect_runner() (neurio.devices.physical.st.stm32.stm32 method)": [[7, "neurio.devices.physical.st.stm32.STM32.__connect_runner"]], "infer() (neurio.devices.physical.canaan.kendryte.k210 method)": [[7, "neurio.devices.physical.canaan.kendryte.K210.infer"]], "infer() (neurio.devices.physical.st.stm32.nucleoh723zg method)": [[7, "neurio.devices.physical.st.stm32.NUCLEOH723ZG.infer"]], "infer() (neurio.devices.physical.st.stm32.stm32 method)": [[7, "neurio.devices.physical.st.stm32.STM32.infer"]], "infer() (neurio.devices.physical.st.stm32.stm32l4r9 method)": [[7, "neurio.devices.physical.st.stm32.STM32L4R9.infer"]], "is_alive() (neurio.devices.physical.canaan.kendryte.k210 method)": [[7, "neurio.devices.physical.canaan.kendryte.K210.is_alive"]], "is_alive() (neurio.devices.physical.st.stm32.nucleoh723zg method)": [[7, "neurio.devices.physical.st.stm32.NUCLEOH723ZG.is_alive"]], "is_alive() (neurio.devices.physical.st.stm32.stm32 method)": [[7, "neurio.devices.physical.st.stm32.STM32.is_alive"]], "is_alive() (neurio.devices.physical.st.stm32.stm32l4r9 method)": [[7, "neurio.devices.physical.st.stm32.STM32L4R9.is_alive"]], "predict() (neurio.devices.physical.canaan.kendryte.k210 method)": [[7, "neurio.devices.physical.canaan.kendryte.K210.predict"]], "predict() (neurio.devices.physical.st.stm32.nucleoh723zg method)": [[7, "neurio.devices.physical.st.stm32.NUCLEOH723ZG.predict"]], "predict() (neurio.devices.physical.st.stm32.stm32 method)": [[7, "neurio.devices.physical.st.stm32.STM32.predict"]], "predict() (neurio.devices.physical.st.stm32.stm32l4r9 method)": [[7, "neurio.devices.physical.st.stm32.STM32L4R9.predict"]], "prepare_for_inference() (neurio.devices.physical.canaan.kendryte.k210 method)": [[7, "neurio.devices.physical.canaan.kendryte.K210.prepare_for_inference"]], "prepare_for_inference() (neurio.devices.physical.st.stm32.nucleoh723zg method)": [[7, "neurio.devices.physical.st.stm32.NUCLEOH723ZG.prepare_for_inference"]], "prepare_for_inference() (neurio.devices.physical.st.stm32.stm32 method)": [[7, "neurio.devices.physical.st.stm32.STM32.prepare_for_inference"]], "prepare_for_inference() (neurio.devices.physical.st.stm32.stm32l4r9 method)": [[7, "neurio.devices.physical.st.stm32.STM32L4R9.prepare_for_inference"]], "k210virtual (class in neurio.devices.virtual.canaan.kendryte)": [[8, "neurio.devices.virtual.canaan.kendryte.K210Virtual"]], "tflitevirtual (class in neurio.devices.virtual.tensorflow.tflite)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual"]], "create_log_dirs() (neurio.devices.virtual.tensorflow.tflite.tflitevirtual method)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual.create_log_dirs"]], "detach() (neurio.devices.virtual.tensorflow.tflite.tflitevirtual method)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual.detach"]], "is_alive() (neurio.devices.virtual.canaan.kendryte.k210virtual method)": [[8, "neurio.devices.virtual.canaan.kendryte.K210Virtual.is_alive"]], "is_alive() (neurio.devices.virtual.tensorflow.tflite.tflitevirtual method)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual.is_alive"]], "predict() (neurio.devices.virtual.tensorflow.tflite.tflitevirtual method)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual.predict"]], "prepare_for_inference() (neurio.devices.virtual.tensorflow.tflite.tflitevirtual method)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual.prepare_for_inference"]], "save_data() (neurio.devices.virtual.tensorflow.tflite.tflitevirtual method)": [[8, "neurio.devices.virtual.tensorflow.tflite.TFLiteVirtual.save_data"]], "cifar10classification (class in neurio.tasks.classification)": [[9, "neurio.tasks.classification.CIFAR10Classification"]], "imagenetclassification (class in neurio.tasks.classification)": [[9, "neurio.tasks.classification.ImageNetClassification"]], "mnistclassification (class in neurio.tasks.classification)": [[9, "neurio.tasks.classification.MNISTClassification"]], "nmnistclassification (class in neurio.tasks.classification)": [[9, "neurio.tasks.classification.NMNISTClassification"]], "shdclassification (class in neurio.tasks.classification)": [[9, "neurio.tasks.classification.SHDClassification"]], "evaluate() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.evaluate"]], "evaluate() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.evaluate"]], "evaluate() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.evaluate"]], "evaluate() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.evaluate"]], "evaluate() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.evaluate"]], "get_data() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.get_data"]], "get_data() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.get_data"]], "get_data() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.get_data"]], "get_data() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.get_data"]], "get_data() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.get_data"]], "get_metrics() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.get_metrics"]], "get_metrics() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.get_metrics"]], "get_metrics() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.get_metrics"]], "get_metrics() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.get_metrics"]], "get_metrics() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.get_metrics"]], "get_metrics_info() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.get_metrics_info"]], "get_metrics_info() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.get_metrics_info"]], "get_metrics_info() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.get_metrics_info"]], "get_metrics_info() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.get_metrics_info"]], "get_metrics_info() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.get_metrics_info"]], "get_test_data() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.get_test_data"]], "get_test_data() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.get_test_data"]], "get_test_data() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.get_test_data"]], "get_test_data() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.get_test_data"]], "get_test_data() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.get_test_data"]], "get_train_data() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.get_train_data"]], "get_train_data() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.get_train_data"]], "get_train_data() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.get_train_data"]], "get_train_data() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.get_train_data"]], "get_train_data() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.get_train_data"]], "get_validation_data() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.get_validation_data"]], "get_validation_data() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.get_validation_data"]], "get_validation_data() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.get_validation_data"]], "get_validation_data() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.get_validation_data"]], "get_validation_data() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.get_validation_data"]], "module": [[9, "module-neurio.tasks.classification"]], "neurio.tasks.classification": [[9, "module-neurio.tasks.classification"]], "prepare_data() (neurio.tasks.classification.nmnistclassification method)": [[9, "neurio.tasks.classification.NMNISTClassification.prepare_data"]], "prepare_data() (neurio.tasks.classification.shdclassification method)": [[9, "neurio.tasks.classification.SHDClassification.prepare_data"]], "preprocess() (neurio.tasks.classification.cifar10classification method)": [[9, "neurio.tasks.classification.CIFAR10Classification.preprocess"]], "preprocess() (neurio.tasks.classification.imagenetclassification method)": [[9, "neurio.tasks.classification.ImageNetClassification.preprocess"]], "preprocess() (neurio.tasks.classification.mnistclassification method)": [[9, "neurio.tasks.classification.MNISTClassification.preprocess"]]}})